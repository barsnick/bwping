name: "Release"

on:
  push:
    tags:
    - RELEASE_*

jobs:
  version:
    name: "Determine Release Version"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
    - name: "Determine release version"
      id: version
      env:
        RELEASE_TAG: ${{ github.ref }}
      run: |
        if echo "$RELEASE_TAG" | grep -E "^refs/tags/RELEASE_[0-9]+\.[0-9]+$" > /dev/null; then
            echo "::set-output name=version::$(echo "$RELEASE_TAG" | sed -E "s|^refs/tags/RELEASE_([0-9]+\.[0-9]+)$|\1|")"
        else
            false
        fi

  src:
    name: "Release Source Package"
    runs-on: ubuntu-latest
    needs: version

    defaults:
      run:
        shell: bash

    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v2

    - name: "Install additional packages"
      run: |
        sudo apt-get -y update
        sudo apt-get -y install autoconf automake

    - name: "Create package"
      run: |
        autoreconf -f -i -Wall,error
        ./configure
        sudo make distcheck "CFLAGS=-Werror"

    - name: "Upload package to GitHub"
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifactErrorsFailBuild: true
        artifacts: "bwping-*.tar.gz"
        draft: true
        name: "BWPing ${{ needs.version.outputs.version }}"
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: "Upload package to SourceForge"
      env:
        RELEASE_VERSION: ${{ needs.version.outputs.version }}
        SF_PRIVATE_KEY: ${{ secrets.SF_PRIVATE_KEY }}
      run: |
        eval "$(ssh-agent)"
        ssh-add - <<< "$SF_PRIVATE_KEY"
        mkdir -p ~/.ssh
        echo "frs.sourceforge.net ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOQD35Ujalhh+JJkPvMckDlhu4dS7WH6NsOJ15iGCJLC" >> ~/.ssh/known_hosts
        sftp -b - oleg_derevenetz@frs.sourceforge.net << EOF
        mkdir /home/frs/project/bwping/bwping/$RELEASE_VERSION
        cd /home/frs/project/bwping/bwping/$RELEASE_VERSION
        put bwping-*.tar.gz
        EOF

  cygwin:
    name: "Release Cygwin Package"
    runs-on: windows-latest
    needs: version

    defaults:
      run:
        shell: cmd

    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v2

    - name: "Install additional packages"
      run: |
        choco.exe install cygwin cyg-get zip unzip -y && ^
        cyg-get.bat autoconf automake make gcc-core git

    - name: "Fix line endings"
      run: |
        C:\tools\cygwin\bin\bash.exe -l -c ^"^
            cd ""$GITHUB_WORKSPACE"" ^&^& ^
            git ls-files -z ^| xargs -0 rm ^&^& ^
            git checkout -f .^"

    - name: "Run build"
      run: |
        C:\tools\cygwin\bin\bash.exe -l -c ^"^
            cd ""$GITHUB_WORKSPACE"" ^&^& ^
            autoreconf -f -i -Wall,error ^&^& ^
            ./configure ^&^& ^
            make ""CFLAGS=-Werror""^"

    - name: "Run checks"
      run: |
        C:\tools\cygwin\bin\bash.exe -l -c ^"^
            cd ""$GITHUB_WORKSPACE"" ^&^& ^
            make check^"

    - name: "Create package"
      shell: bash
      env:
        RELEASE_VERSION: ${{ needs.version.outputs.version }}
      run: |
        OUTPUT="$(zip.exe -j "bwping-$RELEASE_VERSION-win64.zip" AUTHORS bwping.exe COPYING C:\\tools\\cygwin\\bin\\cygwin1.dll README 2>&1)"
        [[ "$(echo "$OUTPUT" | grep -E -v "^\s*adding: ")" == "" ]] || ( echo "$OUTPUT" && false )

    - name: "Verify package"
      shell: bash
      env:
        RELEASE_VERSION: ${{ needs.version.outputs.version }}
      run: |
        unzip.exe "bwping-$RELEASE_VERSION-win64.zip" -d .package
        OUTPUT="$(cmd.exe //c "set PATH= & .package\\bwping.exe" 2>&1 || true)"
        [[ "$(echo "$OUTPUT" | grep -v "^bwping is part of the " | grep -v "^Usage: ")" == "" ]] || ( echo "$OUTPUT" && false )

    - name: "Upload package to GitHub"
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifactErrorsFailBuild: true
        artifacts: "bwping-*.zip"
        draft: true
        name: "BWPing ${{ needs.version.outputs.version }}"
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: "Upload package to SourceForge"
      shell: bash
      env:
        SF_PRIVATE_KEY: ${{ secrets.SF_PRIVATE_KEY }}
      run: |
        eval "$(ssh-agent)"
        ssh-add - <<< "$SF_PRIVATE_KEY"
        mkdir -p ~/.ssh
        echo "frs.sourceforge.net ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOQD35Ujalhh+JJkPvMckDlhu4dS7WH6NsOJ15iGCJLC" >> ~/.ssh/known_hosts
        sftp -b - oleg_derevenetz@frs.sourceforge.net << EOF
        cd /home/frs/project/bwping/ports/win64
        put bwping-*.zip
        EOF
