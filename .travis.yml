language: c

os:
  - linux
  - osx
  - windows

compiler:
  - gcc
  - clang

addons:
  sonarcloud:
    organization: "oleg-derevenetz-github"
    token:
      secure: "pmkCLXhR4ShfcWssSQHw1GZCSRBFqAPAt2d/X+PC/Ctozy8GiJh88tH4mDQgLObG4l0DvZCTnxbLxRpYzvIdJTx1JyJkOKpgDQfj2sQlq1qhE4nSuGAB2+6i0loHNAM1DGrSbpJfalEwIdACSc/Murl6KKpygk2NN7e7aPH9ht8HHNeuHJv6avqM6/x5caq6bsFhHzhqK+g8dKU6AB/TgpyU7k3DbfQH518ZbMB1iYb3ZWRsj9hUnMIBEeA4SLc8j9LyMU7HSOn84n1Fb1iHR6hmMvlePYh3s20WLd5krXh8bYYBPzto7BJIYNlLz3U244hpNjTyXKsHoUeWXlaExZSp3PMyWcqTPfu5smbkC0OHMeM7pxXhLThmqjsB5/t5VGYCa5LwY4+veiXoEgKxvPtlAL54PqbtSmJruOzMpYQPU6idWG13U+nT03CDQFc5zQZbiXCFYA/kSAO9ooZQuBh+wADMFSXkyeLa5C/DHUDhO9IpnDD90y986653HhipyZCF3Zit7Ni/A0iXJSawmPU6/obOGhEKzXRHCeRlOBmAmVy84/cpeyBXB5qnfD+Ae7gT86iXOwjKakd95m0nqNiOgVUjtWUex+Hj/YZ4JXSQ4j8b8XaxTsEcPjP7ZpUIoIF/9Yd9oJ4ZzxVAX3aRfrTjUgW9yXctZ0zV3G9Oovw="

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
        echo && \
        echo "---- INSTALLATION OF CYGWIN AND CYG-GET ---" && \
        echo && \
        choco.exe install cygwin cyg-get && \
        echo && \
        echo "----- INSTALLATION OF CYGWIN PACKAGES -----" && \
        echo && \
        cyg-get.bat autoconf automake make gcc-core clang clang-analyzer git && \
        echo && \
        echo "----------- END OF INSTALLATION -----------" && \
        echo
    fi

script:
  - |
    STATUS=1

    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$CC" == "clang" ]]; then
            echo && \
            echo "----------- AUTORECONF --FORCE ------------" && \
            echo && \
            autoreconf --force && \
            echo && \
            echo "---------------- CONFIGURE ----------------" && \
            echo && \
            ./configure && \
            echo && \
            echo "------------------ MAKE -------------------" && \
            echo && \
            make "CFLAGS=-Werror" && \
            echo && \
            echo "--------------- MAKE CHECK ----------------" && \
            echo && \
            sudo make check "TESTS=tests/bwping" && \
            echo && \
            echo "------------- MAKE DISTCLEAN --------------" && \
            echo && \
            make distclean && \
            echo && \
            echo "---------- SCAN-BUILD CONFIGURE -----------" && \
            echo && \
            scan-build ./configure && \
            echo && \
            echo "------------- SCAN-BUILD MAKE -------------" && \
            echo && \
            scan-build --status-bugs make "CFLAGS=-std=gnu99 -Werror"

            STATUS=$?
        else
            echo && \
            echo "--------- UNSHALLOW GIT FOR SONAR ---------" && \
            echo && \
            git fetch --unshallow && \
            echo && \
            echo "----------- AUTORECONF --FORCE ------------" && \
            echo && \
            autoreconf --force && \
            echo && \
            echo "---------------- CONFIGURE ----------------" && \
            echo && \
            ./configure && \
            echo && \
            echo "------------------ MAKE -------------------" && \
            echo && \
            make "CFLAGS=-Werror" && \
            echo && \
            echo "--------------- MAKE CHECK ----------------" && \
            echo && \
            sudo make check "TESTS=tests/bwping" && \
            if [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then \
                echo && \
                echo "-------------- SONAR WRAPPER --------------" && \
                echo && \
                build-wrapper-linux-x86-64 --out-dir bw-output make clean all && \
                echo && \
                echo "-------------- SONAR SCANNER --------------" && \
                echo && \
                sonar-scanner -Dsonar.projectKey=oleg-derevenetz_bwping \
                              -Dsonar.projectName=BWPing \
                              -Dsonar.sources=. \
                              -Dsonar.sourceEncoding=UTF-8 \
                              -Dsonar.cfamily.build-wrapper-output=bw-output \
                              -Dsonar.cfamily.cache.enabled=false \
                              -Dsonar.cfamily.threads=1; \
            fi

            STATUS=$?
        fi

        if [[ -f config.log ]]; then
            echo
            echo "----------- BEGIN OF CONFIG.LOG -----------"
            echo
            cat config.log
            echo
            echo "------------ END OF CONFIG.LOG ------------"
            echo
        fi
        if [[ -f test-suite.log ]]; then
            echo
            echo "--------- BEGIN OF TEST-SUITE.LOG ---------"
            echo
            cat test-suite.log
            echo
            echo "---------- END OF TEST-SUITE.LOG ----------"
            echo
        fi
        if [[ -f tests/bwping.log ]]; then
            echo
            echo "-------- BEGIN OF TESTS/BWPING.LOG --------"
            echo
            cat tests/bwping.log
            echo
            echo "--------- END OF TESTS/BWPING.LOG ---------"
            echo
        fi
        if [[ -f tests/bwping6.log ]]; then
            echo
            echo "------- BEGIN OF TESTS/BWPING6.LOG --------"
            echo
            cat tests/bwping6.log
            echo
            echo "-------- END OF TESTS/BWPING6.LOG ---------"
            echo
        fi
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        echo && \
        echo "----------- AUTORECONF --FORCE ------------" && \
        echo && \
        autoreconf --force && \
        echo && \
        echo "---------------- CONFIGURE ----------------" && \
        echo && \
        ./configure && \
        echo && \
        echo "------------------ MAKE -------------------" && \
        echo && \
        make "CFLAGS=-Werror"

        STATUS=$?

        if [[ -f config.log ]]; then
            echo
            echo "----------- BEGIN OF CONFIG.LOG -----------"
            echo
            cat config.log
            echo
            echo "------------ END OF CONFIG.LOG ------------"
            echo
        fi
    elif [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
        GIT_REPO_URL="https://github.com/oleg-derevenetz/bwping.git"
        BUILD_DIR="$HOME/_CYGWIN_"

        if [[ "$CC" == "clang" ]]; then
            mkdir -p "$BUILD_DIR" && \
            cmd.exe //c C:\\tools\\cygwin\\bin\\bash.exe -l -c " \
                echo && \
                echo \"------------------ SETUP ------------------\" && \
                echo && \
                export CC=\"$CC\" && \
                cd \"/cygdrive/$BUILD_DIR\" && \
                echo && \
                echo \"---------------- GIT CLONE ----------------\" && \
                echo && \
                git clone --depth=50 --branch=\"$TRAVIS_BRANCH\" \"$GIT_REPO_URL\" . && \
                echo && \
                echo \"----------- AUTORECONF --FORCE ------------\" && \
                echo && \
                autoreconf --force && \
                echo && \
                echo \"---------------- CONFIGURE ----------------\" && \
                echo && \
                ./configure && \
                echo && \
                echo \"------------------ MAKE -------------------\" && \
                echo && \
                make \"CFLAGS=-Werror\" && \
                echo && \
                echo \"--------------- MAKE CHECK ----------------\" && \
                echo && \
                make check && \
                echo && \
                echo \"------------- MAKE DISTCHECK --------------\" && \
                echo && \
                make distcheck && \
                echo && \
                echo \"------------- MAKE DISTCLEAN --------------\" && \
                echo && \
                make distclean && \
                echo && \
                echo \"---------- SCAN-BUILD CONFIGURE -----------\" && \
                echo && \
                scan-build ./configure && \
                echo && \
                echo \"------------- SCAN-BUILD MAKE -------------\" && \
                echo && \
                scan-build --status-bugs make \"CFLAGS=-std=gnu99 -Werror\""

            STATUS=$?
        else
            mkdir -p "$BUILD_DIR" && \
            cmd.exe //c C:\\tools\\cygwin\\bin\\bash.exe -l -c " \
                echo && \
                echo \"------------------ SETUP ------------------\" && \
                echo && \
                export CC=\"$CC\" && \
                cd \"/cygdrive/$BUILD_DIR\" && \
                echo && \
                echo \"---------------- GIT CLONE ----------------\" && \
                echo && \
                git clone --depth=50 --branch=\"$TRAVIS_BRANCH\" \"$GIT_REPO_URL\" . && \
                echo && \
                echo \"----------- AUTORECONF --FORCE ------------\" && \
                echo && \
                autoreconf --force && \
                echo && \
                echo \"---------------- CONFIGURE ----------------\" && \
                echo && \
                ./configure && \
                echo && \
                echo \"------------------ MAKE -------------------\" && \
                echo && \
                make \"CFLAGS=-Werror\" && \
                echo && \
                echo \"--------------- MAKE CHECK ----------------\" && \
                echo && \
                make check && \
                echo && \
                echo \"------------- MAKE DISTCHECK --------------\" && \
                echo && \
                make distcheck"

            STATUS=$?
        fi

        if [[ -f "$BUILD_DIR/config.log" ]]; then
            echo
            echo "----------- BEGIN OF CONFIG.LOG -----------"
            echo
            cat "$BUILD_DIR/config.log"
            echo
            echo "------------ END OF CONFIG.LOG ------------"
            echo
        fi
        if [[ -f "$BUILD_DIR/test-suite.log" ]]; then
            echo
            echo "--------- BEGIN OF TEST-SUITE.LOG ---------"
            echo
            cat "$BUILD_DIR/test-suite.log"
            echo
            echo "---------- END OF TEST-SUITE.LOG ----------"
            echo
        fi
        if [[ -f "$BUILD_DIR/tests/bwping.log" ]]; then
            echo
            echo "-------- BEGIN OF TESTS/BWPING.LOG --------"
            echo
            cat "$BUILD_DIR/tests/bwping.log"
            echo
            echo "--------- END OF TESTS/BWPING.LOG ---------"
            echo
        fi
        if [[ -f "$BUILD_DIR/tests/bwping6.log" ]]; then
            echo
            echo "------- BEGIN OF TESTS/BWPING6.LOG --------"
            echo
            cat "$BUILD_DIR/tests/bwping6.log"
            echo
            echo "-------- END OF TESTS/BWPING6.LOG ---------"
            echo
        fi
    fi

    sleep 5

    exit $STATUS
